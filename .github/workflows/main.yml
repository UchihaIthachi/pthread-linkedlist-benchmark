name: Build Report PDF

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags:
      - "v*"

permissions:
  contents: write # allow commit & push of the generated PDF

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout full history so we can commit back
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Python for plotting (headless)
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ python3-pip texlive-latex-base texlive-latex-recommended texlive-latex-extra

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install matplotlib pandas

      # 3) Generate PDF report
      - name: Generate PDF report
        env:
          MPLBACKEND: Agg
        run: |
          make pdf

      # 4) Upload PDF artifact
      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: report-pdf
          path: report/lab1_report.pdf

      # 5) Commit the generated PDF back to repo
      - name: Commit PDF back to repo
        if: github.ref == 'refs/heads/main'
        run: |
          set -e
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add report/
          git commit -m "docs: auto-generate report and update PDF" || echo "No changes to commit"
          git push

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
          name: report-pdf
          path: .

      - name: Create Release and Upload PDF
        uses: softprops/action-gh-release@v1
        with:
          files: report/lab1_report.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
